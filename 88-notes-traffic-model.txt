RMCAT Media Traffic Generator Meeting

Should switched MCUs be in scope?  How do they relate to simulcast?

Modelling: variability
- do we need to model audio sources too? has different characteristics and
 requirements
- need to model "q-p toggling" for macroblocks? 
- over what time period do we need to keep to the target bit rate? it's
  averaged over some number of frames/some time period
-- half a second?
-- i.e., the model should say "at time frame rate, generate traffic that
   hits this rate averaged over x frames"
- Frame sizes
-- qcif, 360p, 720p, 1080p
-- variable frame rates: 7.5/15/30/60
-- max frame rate should be 4x min frame rate
- i-frames not sent unless something causes a loss of sync (high loss
  rates/source switch on MCU/camera change/etc)
-- assume i-frame is upto 10x average frame size
-- we'll need to model what loss patterns trigger an i-frame (burst
   length to trigger)
-- might also want to model codecs that send periodic i-frames
- we'll need an entropy model for video
-- maybe generate by encoding a bunch of sequences using a bunch of
   codecs, then average it out? what does the distribution look like?

Modelling: responsiveness
- no GOP; 
- can change bitrate on the next frame for both increase and decrease in rate
-- seems to be some discussion: codecs may not like increasing rate on the
   next frame; they increase averaged over several frames?
- switching between frame sizes generates an i-frame
- small rate changes (10%?) can be done quickly; larger changes that need
  a change in frame size will cause a i-frame burst
-- send i-frame slowly in parallel with lower rate coding when up-rating
- codec issue: changing resolution too often is a problem; need at least a
  couple of seconds between resolution switches; more would be better
-- if the sender changes frame rate often, does it degrade or impact the user?
- at a particular rate, can likely go 0.5x-2.0x target bit rate; there's a 
  significant overlap between the rates that can be encoded for adjacent
  resolutions

who is in control?
- what's the interface between codec and congestion control?
-- does the congestion control just give a target bit rate?
-- or is there more information about frame sizes/rates passed around?
-- no real agreement
--- a narrow interface is clearly acceptable to the group
--- wider APIs (giving codec information) have potential, but maybe for a
    later version